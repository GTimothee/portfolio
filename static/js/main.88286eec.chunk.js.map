{"version":3,"sources":["components/Navbar/Navbar.js","components/Home/Home.js","components/Projects/Projects.js","components/Contact/Contact.js","components/App/App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","Navbar","bg","expand","Brand","Nav","Link","react_router_dom","to","Toggle","aria-controls","Collapse","id","className","NavDropdown","title","Item","href","Divider","Form","inline","FormControl","type","placeholder","Button","variant","React","Component","Home","Projects","Contact","Group","controlId","Label","Control","as","rows","App","Container","fluid","Jumbotron","style","marginBottom","Row","Col","components_Navbar_Navbar","marginTop","xs","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88286eec.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown, Form, Button, FormControl } from 'react-bootstrap';\nimport './Navbar.css'\n\nclass NavBar extends React.Component{\n  render(){\n    return (\n\n      <Navbar bg=\"dark\" expand=\"lg\">\n        <Navbar.Brand ><Nav.Link><Link to=\"/\">Home</Link></Nav.Link></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            \n            \n            <Nav.Link><Link to=\"/Projects\">Projects</Link></Nav.Link>\n            <Nav.Link><Link to=\"/Contact\">Contact</Link></Nav.Link>\n\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n\n    )\n  }\n}\n\nexport default NavBar\n","import React, {Component} from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass Home extends React.Component{\n  render(){\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React, {Component} from 'react';\n\nclass Projects extends React.Component {\n  render() {\n    return <div>\n      <h2>Réalisations</h2>\n      <ul>\n        <li>project1</li>\n        <li>project2</li>\n        <li>project3</li>\n      </ul>\n    </div>;\n  }\n}\n\nexport default Projects;\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap'\n\nclass Contact extends React.Component {\n  render() {\n    return <div>\n      <h2>Contactez-moi</h2>\n      <Form>\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Objet</Form.Label>\n          <Form.Control as=\"select\">\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Message</Form.Label>\n          <Form.Control as=\"textarea\" rows={3} />\n        </Form.Group>\n      </Form>\n    </div>;\n  }\n}\n\nexport default Contact;\n","import React from 'react';\nimport './App.css';\nimport NavBar from './../Navbar/Navbar.js'\nimport Home from './../Home/Home.js'\nimport Projects from './../Projects/Projects.js'\nimport Contact from './../Contact/Contact.js'\nimport { Route } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Badge from 'react-bootstrap/Badge';\n\nfunction App() {\n  return (\n      <Container id='app' fluid>\n        <Jumbotron fluid style={{ marginBottom: \"0\" }}>\n          <center>\n            <h1>Timothée Guédon</h1>\n            <h2>Ingénieur deep learning</h2>\n          </center>\n        </Jumbotron>\n\n        <Row id='header'>\n          <Col>\n            <NavBar />\n          </Col>\n        </Row>\n\n        <Container style={{ marginTop: \"2%\" }} id='body'>\n          <Row></Row>\n          <Row>\n            <Col></Col>\n            <Col xs={6}>\n              <Route path=\"/\" component={Home}/>\n              <Route path=\"/Projects\" component={Projects} />\n              <Route path=\"/Contact\" component={Contact}/>\n            </Col>\n            <Col></Col>\n          </Row>\n          <Row></Row>\n        </Container>\n          \n\n      </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nReactDOM.render((\n  <Router>\n    <App />\n  </Router>\n),\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}